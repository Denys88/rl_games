params:  
  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic
    separate: True
    normalization: 'layer_norm'
    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        
        mu_init:
          # pytorch
          name: default
          scale: 0.02

          # tf
        #  name: normc_initializer
        #  std: 0.01
        sigma_init:
          name: const_initializer     
          #  value: 0 # tf
          val: 0 # pytorch

        fixed_sigma: False
    mlp:
      units: [128]
      activation: elu

      initializer:
        # pytorch
          name: default
          scale: 2

      # tf
      #  name: normc_initializer
      #  std: 1
      regularizer:
        name:  'None' #'l2_regularizer'
        #scale: 0.001
    rnn:
      name: 'lstm'
      units: 64
      layers: 1
      before_mlp: False

  load_checkpoint: False
  load_path: 'nn/ant_torch.pth'

  config:
    reward_shaper:
      scale_value: 0.01
    normalize_advantage : True
    gamma : 0.99
    tau : 0.95
    learning_rate : 3e-4
    name : 'ant_torch_rnn'
    score_to_win : 20000
    grad_norm : 2.5
    entropy_coef : 0
    weight_decay: 0.001
    truncate_grads : True
    env_name : FlexAnt
    ppo : True
    e_clip : 0.2
    num_actors : 256
    horizon_length : 256
    minibatch_size : 8192
    mini_epochs : 8
    critic_coef : 2
    clip_value : False
    lr_schedule : adaptive
    kl_threshold : 0.01
    normalize_input : True
    seq_length : 32
    bounds_loss_coef: 0.000

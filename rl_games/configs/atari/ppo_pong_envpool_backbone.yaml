params:  
  algo:
    name: a2c_discrete

  model:
    name: discrete_a2c

  network:
    # name: resnet_actor_critic
    # require_rewards: True
    # require_last_actions: True
    # separate: False
    # value_shape: 1
    name: e2e_vision_actor_critic
    separate: False
    value_shape: 1
    space: 
      discrete:
    
    # cnn:
    #   permute_input: False
    #   conv_depths: [16, 32, 32]
    #   activation: relu
    #   initializer:
    #     name: default
    #   regularizer:
    #     name: 'None'
  
    backbone:
      type: resnet18 #convnext_tiny #vit_tiny_patch16_224
      pretrained: True
      permute_input: False
      freeze: True

      args:
        zero_init_residual: True
        norm_layer: None

    mlp:
      units: [512]
      activation: relu
      regularizer:
        name: None
      initializer:
        name: default

    # rnn:
    #   name: lstm
    #   units: 256
    #   layers: 1
  config:
    name: pong_resnet18_pretrained_2_mini_epoch_1e-4_linear_lr_norm_value_frozen
    env_name: envpool
    reward_shaper:
      min_val: -1
      max_val: 1

    mixed_precision: True
    normalize_input: False
    normalize_value: True
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 1e-4

    score_to_win: 100000
    grad_norm: 1.0
    entropy_coef: 0.01
    truncate_grads: True

    e_clip: 0.2
    clip_value: True
    save_best_after: 25
    save_frequency: 50
    num_actors: 32
    horizon_length: 64
    minibatch_size: 512
    mini_epochs: 2
    critic_coef: 1
    lr_schedule: linear
    kl_threshold: 0.01
    use_diagnostics: True
    seq_length: 8
    max_epochs: 1000
    #weight_decay: 0.001

    env_config:
      env_name: Pong-v5
      has_lives: False
      use_dict_obs_space: False #True

    player:
        render: True
        games_num: 10
        n_game_life: 1
        deterministic: True

